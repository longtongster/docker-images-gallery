version: '3'
services:
  frontend:
    build: ./frontend
    restart: always
    ports:
      - '3000:3000'
    # maps frontend folder to app in the container
    volumes:
      - /app/node_modules
      - ./frontend:/app
    environment:
     - CHOKIDAR_USEPOLLING=true
  api:
    build: ./api
    restart: always
    ports:
      - '5050:5050'
    volumes:
      - ./api:/app
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root 
      MONGO_INITDB_ROOT_PASSWORD: example
    # note the difference with volume under the api service
    volumes:
      - mongodb_data:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports: 
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root 
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    depends_on:
      - mongo
  curl:
    # I was able o use this container to connect to the api service
    # "curl api:5050"
    # Since the container exists I did this outside the compose file
    image: appropriate/curl

  # instead of mapping a directory we can also use docker volumes.
  # The volume will not be deleted if we stop the service
volumes:
  mongodb_data:

